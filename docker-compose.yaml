services:
  db:
    image: postgres:16
    env_file:
      - ./.env
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "0.0.0.0:8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - mynetwork
    entrypoint: /app/entrypoint.sh
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000

  frontend:
    build: ./frontend
    ports:
      - "0.0.0.0:3000:3000"
    stdin_open: true # For React dev server
    tty: true # For React dev server
    environment:
      # This ensures the dev server rebuilds on code changes
      - WATCHPACK_POLLING=true
      - REACT_APP_API_URL=https://sdbworker_backend.salezianipresov.xyz/api
    depends_on:
      - backend
    networks:
      - mynetwork

volumes:
  postgres_data:

networks:
  mynetwork:
    driver: bridge
